// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package thales

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// AllMarketsMarketsMarket includes the requested fields of the GraphQL type Market.
type AllMarketsMarketsMarket struct {
	Id           string `json:"id"`
	Timestamp    int64  `json:"timestamp"`
	Creator      []byte `json:"creator"`
	CurrencyKey  []byte `json:"currencyKey"`
	StrikePrice  int64  `json:"strikePrice"`
	MaturityDate int64  `json:"maturityDate"`
	ExpiryDate   int64  `json:"expiryDate"`
	IsOpen       bool   `json:"isOpen"`
	PoolSize     int64  `json:"poolSize"`
	LongAddress  []byte `json:"longAddress"`
	ShortAddress []byte `json:"shortAddress"`
	Result       int    `json:"result"`
	CustomMarket bool   `json:"customMarket"`
	CustomOracle []byte `json:"customOracle"`
	FinalPrice   int64  `json:"finalPrice"`
}

// GetId returns AllMarketsMarketsMarket.Id, and is useful for accessing the field via an interface.
func (v *AllMarketsMarketsMarket) GetId() string { return v.Id }

// GetTimestamp returns AllMarketsMarketsMarket.Timestamp, and is useful for accessing the field via an interface.
func (v *AllMarketsMarketsMarket) GetTimestamp() int64 { return v.Timestamp }

// GetCreator returns AllMarketsMarketsMarket.Creator, and is useful for accessing the field via an interface.
func (v *AllMarketsMarketsMarket) GetCreator() []byte { return v.Creator }

// GetCurrencyKey returns AllMarketsMarketsMarket.CurrencyKey, and is useful for accessing the field via an interface.
func (v *AllMarketsMarketsMarket) GetCurrencyKey() []byte { return v.CurrencyKey }

// GetStrikePrice returns AllMarketsMarketsMarket.StrikePrice, and is useful for accessing the field via an interface.
func (v *AllMarketsMarketsMarket) GetStrikePrice() int64 { return v.StrikePrice }

// GetMaturityDate returns AllMarketsMarketsMarket.MaturityDate, and is useful for accessing the field via an interface.
func (v *AllMarketsMarketsMarket) GetMaturityDate() int64 { return v.MaturityDate }

// GetExpiryDate returns AllMarketsMarketsMarket.ExpiryDate, and is useful for accessing the field via an interface.
func (v *AllMarketsMarketsMarket) GetExpiryDate() int64 { return v.ExpiryDate }

// GetIsOpen returns AllMarketsMarketsMarket.IsOpen, and is useful for accessing the field via an interface.
func (v *AllMarketsMarketsMarket) GetIsOpen() bool { return v.IsOpen }

// GetPoolSize returns AllMarketsMarketsMarket.PoolSize, and is useful for accessing the field via an interface.
func (v *AllMarketsMarketsMarket) GetPoolSize() int64 { return v.PoolSize }

// GetLongAddress returns AllMarketsMarketsMarket.LongAddress, and is useful for accessing the field via an interface.
func (v *AllMarketsMarketsMarket) GetLongAddress() []byte { return v.LongAddress }

// GetShortAddress returns AllMarketsMarketsMarket.ShortAddress, and is useful for accessing the field via an interface.
func (v *AllMarketsMarketsMarket) GetShortAddress() []byte { return v.ShortAddress }

// GetResult returns AllMarketsMarketsMarket.Result, and is useful for accessing the field via an interface.
func (v *AllMarketsMarketsMarket) GetResult() int { return v.Result }

// GetCustomMarket returns AllMarketsMarketsMarket.CustomMarket, and is useful for accessing the field via an interface.
func (v *AllMarketsMarketsMarket) GetCustomMarket() bool { return v.CustomMarket }

// GetCustomOracle returns AllMarketsMarketsMarket.CustomOracle, and is useful for accessing the field via an interface.
func (v *AllMarketsMarketsMarket) GetCustomOracle() []byte { return v.CustomOracle }

// GetFinalPrice returns AllMarketsMarketsMarket.FinalPrice, and is useful for accessing the field via an interface.
func (v *AllMarketsMarketsMarket) GetFinalPrice() int64 { return v.FinalPrice }

// AllMarketsResponse is returned by AllMarkets on success.
type AllMarketsResponse struct {
	Markets []AllMarketsMarketsMarket `json:"markets"`
}

// GetMarkets returns AllMarketsResponse.Markets, and is useful for accessing the field via an interface.
func (v *AllMarketsResponse) GetMarkets() []AllMarketsMarketsMarket { return v.Markets }

// AllRangedMarketsRangedMarketsRangedMarket includes the requested fields of the GraphQL type RangedMarket.
type AllRangedMarketsRangedMarketsRangedMarket struct {
	Id           string                                               `json:"id"`
	Timestamp    int64                                                `json:"timestamp"`
	CurrencyKey  []byte                                               `json:"currencyKey"`
	MaturityDate int64                                                `json:"maturityDate"`
	LeftPrice    int64                                                `json:"leftPrice"`
	RightPrice   int64                                                `json:"rightPrice"`
	InAddress    []byte                                               `json:"inAddress"`
	OutAddress   []byte                                               `json:"outAddress"`
	RightMarket  AllRangedMarketsRangedMarketsRangedMarketRightMarket `json:"rightMarket"`
	LeftMarket   AllRangedMarketsRangedMarketsRangedMarketLeftMarket  `json:"leftMarket"`
	IsOpen       bool                                                 `json:"isOpen"`
	Result       int                                                  `json:"result"`
	FinalPrice   int64                                                `json:"finalPrice"`
}

// GetId returns AllRangedMarketsRangedMarketsRangedMarket.Id, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarket) GetId() string { return v.Id }

// GetTimestamp returns AllRangedMarketsRangedMarketsRangedMarket.Timestamp, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarket) GetTimestamp() int64 { return v.Timestamp }

// GetCurrencyKey returns AllRangedMarketsRangedMarketsRangedMarket.CurrencyKey, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarket) GetCurrencyKey() []byte { return v.CurrencyKey }

// GetMaturityDate returns AllRangedMarketsRangedMarketsRangedMarket.MaturityDate, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarket) GetMaturityDate() int64 { return v.MaturityDate }

// GetLeftPrice returns AllRangedMarketsRangedMarketsRangedMarket.LeftPrice, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarket) GetLeftPrice() int64 { return v.LeftPrice }

// GetRightPrice returns AllRangedMarketsRangedMarketsRangedMarket.RightPrice, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarket) GetRightPrice() int64 { return v.RightPrice }

// GetInAddress returns AllRangedMarketsRangedMarketsRangedMarket.InAddress, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarket) GetInAddress() []byte { return v.InAddress }

// GetOutAddress returns AllRangedMarketsRangedMarketsRangedMarket.OutAddress, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarket) GetOutAddress() []byte { return v.OutAddress }

// GetRightMarket returns AllRangedMarketsRangedMarketsRangedMarket.RightMarket, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarket) GetRightMarket() AllRangedMarketsRangedMarketsRangedMarketRightMarket {
	return v.RightMarket
}

// GetLeftMarket returns AllRangedMarketsRangedMarketsRangedMarket.LeftMarket, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarket) GetLeftMarket() AllRangedMarketsRangedMarketsRangedMarketLeftMarket {
	return v.LeftMarket
}

// GetIsOpen returns AllRangedMarketsRangedMarketsRangedMarket.IsOpen, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarket) GetIsOpen() bool { return v.IsOpen }

// GetResult returns AllRangedMarketsRangedMarketsRangedMarket.Result, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarket) GetResult() int { return v.Result }

// GetFinalPrice returns AllRangedMarketsRangedMarketsRangedMarket.FinalPrice, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarket) GetFinalPrice() int64 { return v.FinalPrice }

// AllRangedMarketsRangedMarketsRangedMarketLeftMarket includes the requested fields of the GraphQL type Market.
type AllRangedMarketsRangedMarketsRangedMarketLeftMarket struct {
	Id           string `json:"id"`
	Timestamp    int64  `json:"timestamp"`
	Creator      []byte `json:"creator"`
	CurrencyKey  []byte `json:"currencyKey"`
	StrikePrice  int64  `json:"strikePrice"`
	MaturityDate int64  `json:"maturityDate"`
	ExpiryDate   int64  `json:"expiryDate"`
	IsOpen       bool   `json:"isOpen"`
	PoolSize     int64  `json:"poolSize"`
	LongAddress  []byte `json:"longAddress"`
	ShortAddress []byte `json:"shortAddress"`
	Result       int    `json:"result"`
	CustomMarket bool   `json:"customMarket"`
	CustomOracle []byte `json:"customOracle"`
	FinalPrice   int64  `json:"finalPrice"`
}

// GetId returns AllRangedMarketsRangedMarketsRangedMarketLeftMarket.Id, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketLeftMarket) GetId() string { return v.Id }

// GetTimestamp returns AllRangedMarketsRangedMarketsRangedMarketLeftMarket.Timestamp, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketLeftMarket) GetTimestamp() int64 {
	return v.Timestamp
}

// GetCreator returns AllRangedMarketsRangedMarketsRangedMarketLeftMarket.Creator, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketLeftMarket) GetCreator() []byte { return v.Creator }

// GetCurrencyKey returns AllRangedMarketsRangedMarketsRangedMarketLeftMarket.CurrencyKey, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketLeftMarket) GetCurrencyKey() []byte {
	return v.CurrencyKey
}

// GetStrikePrice returns AllRangedMarketsRangedMarketsRangedMarketLeftMarket.StrikePrice, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketLeftMarket) GetStrikePrice() int64 {
	return v.StrikePrice
}

// GetMaturityDate returns AllRangedMarketsRangedMarketsRangedMarketLeftMarket.MaturityDate, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketLeftMarket) GetMaturityDate() int64 {
	return v.MaturityDate
}

// GetExpiryDate returns AllRangedMarketsRangedMarketsRangedMarketLeftMarket.ExpiryDate, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketLeftMarket) GetExpiryDate() int64 {
	return v.ExpiryDate
}

// GetIsOpen returns AllRangedMarketsRangedMarketsRangedMarketLeftMarket.IsOpen, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketLeftMarket) GetIsOpen() bool { return v.IsOpen }

// GetPoolSize returns AllRangedMarketsRangedMarketsRangedMarketLeftMarket.PoolSize, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketLeftMarket) GetPoolSize() int64 { return v.PoolSize }

// GetLongAddress returns AllRangedMarketsRangedMarketsRangedMarketLeftMarket.LongAddress, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketLeftMarket) GetLongAddress() []byte {
	return v.LongAddress
}

// GetShortAddress returns AllRangedMarketsRangedMarketsRangedMarketLeftMarket.ShortAddress, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketLeftMarket) GetShortAddress() []byte {
	return v.ShortAddress
}

// GetResult returns AllRangedMarketsRangedMarketsRangedMarketLeftMarket.Result, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketLeftMarket) GetResult() int { return v.Result }

// GetCustomMarket returns AllRangedMarketsRangedMarketsRangedMarketLeftMarket.CustomMarket, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketLeftMarket) GetCustomMarket() bool {
	return v.CustomMarket
}

// GetCustomOracle returns AllRangedMarketsRangedMarketsRangedMarketLeftMarket.CustomOracle, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketLeftMarket) GetCustomOracle() []byte {
	return v.CustomOracle
}

// GetFinalPrice returns AllRangedMarketsRangedMarketsRangedMarketLeftMarket.FinalPrice, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketLeftMarket) GetFinalPrice() int64 {
	return v.FinalPrice
}

// AllRangedMarketsRangedMarketsRangedMarketRightMarket includes the requested fields of the GraphQL type Market.
type AllRangedMarketsRangedMarketsRangedMarketRightMarket struct {
	Id           string `json:"id"`
	Timestamp    int64  `json:"timestamp"`
	Creator      []byte `json:"creator"`
	CurrencyKey  []byte `json:"currencyKey"`
	StrikePrice  int64  `json:"strikePrice"`
	MaturityDate int64  `json:"maturityDate"`
	ExpiryDate   int64  `json:"expiryDate"`
	IsOpen       bool   `json:"isOpen"`
	PoolSize     int64  `json:"poolSize"`
	LongAddress  []byte `json:"longAddress"`
	ShortAddress []byte `json:"shortAddress"`
	Result       int    `json:"result"`
	CustomMarket bool   `json:"customMarket"`
	CustomOracle []byte `json:"customOracle"`
	FinalPrice   int64  `json:"finalPrice"`
}

// GetId returns AllRangedMarketsRangedMarketsRangedMarketRightMarket.Id, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketRightMarket) GetId() string { return v.Id }

// GetTimestamp returns AllRangedMarketsRangedMarketsRangedMarketRightMarket.Timestamp, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketRightMarket) GetTimestamp() int64 {
	return v.Timestamp
}

// GetCreator returns AllRangedMarketsRangedMarketsRangedMarketRightMarket.Creator, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketRightMarket) GetCreator() []byte { return v.Creator }

// GetCurrencyKey returns AllRangedMarketsRangedMarketsRangedMarketRightMarket.CurrencyKey, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketRightMarket) GetCurrencyKey() []byte {
	return v.CurrencyKey
}

// GetStrikePrice returns AllRangedMarketsRangedMarketsRangedMarketRightMarket.StrikePrice, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketRightMarket) GetStrikePrice() int64 {
	return v.StrikePrice
}

// GetMaturityDate returns AllRangedMarketsRangedMarketsRangedMarketRightMarket.MaturityDate, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketRightMarket) GetMaturityDate() int64 {
	return v.MaturityDate
}

// GetExpiryDate returns AllRangedMarketsRangedMarketsRangedMarketRightMarket.ExpiryDate, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketRightMarket) GetExpiryDate() int64 {
	return v.ExpiryDate
}

// GetIsOpen returns AllRangedMarketsRangedMarketsRangedMarketRightMarket.IsOpen, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketRightMarket) GetIsOpen() bool { return v.IsOpen }

// GetPoolSize returns AllRangedMarketsRangedMarketsRangedMarketRightMarket.PoolSize, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketRightMarket) GetPoolSize() int64 { return v.PoolSize }

// GetLongAddress returns AllRangedMarketsRangedMarketsRangedMarketRightMarket.LongAddress, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketRightMarket) GetLongAddress() []byte {
	return v.LongAddress
}

// GetShortAddress returns AllRangedMarketsRangedMarketsRangedMarketRightMarket.ShortAddress, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketRightMarket) GetShortAddress() []byte {
	return v.ShortAddress
}

// GetResult returns AllRangedMarketsRangedMarketsRangedMarketRightMarket.Result, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketRightMarket) GetResult() int { return v.Result }

// GetCustomMarket returns AllRangedMarketsRangedMarketsRangedMarketRightMarket.CustomMarket, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketRightMarket) GetCustomMarket() bool {
	return v.CustomMarket
}

// GetCustomOracle returns AllRangedMarketsRangedMarketsRangedMarketRightMarket.CustomOracle, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketRightMarket) GetCustomOracle() []byte {
	return v.CustomOracle
}

// GetFinalPrice returns AllRangedMarketsRangedMarketsRangedMarketRightMarket.FinalPrice, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsRangedMarketsRangedMarketRightMarket) GetFinalPrice() int64 {
	return v.FinalPrice
}

// AllRangedMarketsResponse is returned by AllRangedMarkets on success.
type AllRangedMarketsResponse struct {
	RangedMarkets []AllRangedMarketsRangedMarketsRangedMarket `json:"rangedMarkets"`
}

// GetRangedMarkets returns AllRangedMarketsResponse.RangedMarkets, and is useful for accessing the field via an interface.
func (v *AllRangedMarketsResponse) GetRangedMarkets() []AllRangedMarketsRangedMarketsRangedMarket {
	return v.RangedMarkets
}

// MarketMarket includes the requested fields of the GraphQL type Market.
type MarketMarket struct {
	Timestamp    int64  `json:"timestamp"`
	Creator      []byte `json:"creator"`
	CurrencyKey  []byte `json:"currencyKey"`
	StrikePrice  int64  `json:"strikePrice"`
	MaturityDate int64  `json:"maturityDate"`
	ExpiryDate   int64  `json:"expiryDate"`
	IsOpen       bool   `json:"isOpen"`
	PoolSize     int64  `json:"poolSize"`
	LongAddress  []byte `json:"longAddress"`
	ShortAddress []byte `json:"shortAddress"`
	Result       int    `json:"result"`
	CustomMarket bool   `json:"customMarket"`
	CustomOracle []byte `json:"customOracle"`
	FinalPrice   int64  `json:"finalPrice"`
}

// GetTimestamp returns MarketMarket.Timestamp, and is useful for accessing the field via an interface.
func (v *MarketMarket) GetTimestamp() int64 { return v.Timestamp }

// GetCreator returns MarketMarket.Creator, and is useful for accessing the field via an interface.
func (v *MarketMarket) GetCreator() []byte { return v.Creator }

// GetCurrencyKey returns MarketMarket.CurrencyKey, and is useful for accessing the field via an interface.
func (v *MarketMarket) GetCurrencyKey() []byte { return v.CurrencyKey }

// GetStrikePrice returns MarketMarket.StrikePrice, and is useful for accessing the field via an interface.
func (v *MarketMarket) GetStrikePrice() int64 { return v.StrikePrice }

// GetMaturityDate returns MarketMarket.MaturityDate, and is useful for accessing the field via an interface.
func (v *MarketMarket) GetMaturityDate() int64 { return v.MaturityDate }

// GetExpiryDate returns MarketMarket.ExpiryDate, and is useful for accessing the field via an interface.
func (v *MarketMarket) GetExpiryDate() int64 { return v.ExpiryDate }

// GetIsOpen returns MarketMarket.IsOpen, and is useful for accessing the field via an interface.
func (v *MarketMarket) GetIsOpen() bool { return v.IsOpen }

// GetPoolSize returns MarketMarket.PoolSize, and is useful for accessing the field via an interface.
func (v *MarketMarket) GetPoolSize() int64 { return v.PoolSize }

// GetLongAddress returns MarketMarket.LongAddress, and is useful for accessing the field via an interface.
func (v *MarketMarket) GetLongAddress() []byte { return v.LongAddress }

// GetShortAddress returns MarketMarket.ShortAddress, and is useful for accessing the field via an interface.
func (v *MarketMarket) GetShortAddress() []byte { return v.ShortAddress }

// GetResult returns MarketMarket.Result, and is useful for accessing the field via an interface.
func (v *MarketMarket) GetResult() int { return v.Result }

// GetCustomMarket returns MarketMarket.CustomMarket, and is useful for accessing the field via an interface.
func (v *MarketMarket) GetCustomMarket() bool { return v.CustomMarket }

// GetCustomOracle returns MarketMarket.CustomOracle, and is useful for accessing the field via an interface.
func (v *MarketMarket) GetCustomOracle() []byte { return v.CustomOracle }

// GetFinalPrice returns MarketMarket.FinalPrice, and is useful for accessing the field via an interface.
func (v *MarketMarket) GetFinalPrice() int64 { return v.FinalPrice }

// MarketResponse is returned by Market on success.
type MarketResponse struct {
	Market MarketMarket `json:"market"`
}

// GetMarket returns MarketResponse.Market, and is useful for accessing the field via an interface.
func (v *MarketResponse) GetMarket() MarketMarket { return v.Market }

// MarketsMarketsMarket includes the requested fields of the GraphQL type Market.
type MarketsMarketsMarket struct {
	Id           string `json:"id"`
	Timestamp    int64  `json:"timestamp"`
	Creator      []byte `json:"creator"`
	CurrencyKey  []byte `json:"currencyKey"`
	StrikePrice  int64  `json:"strikePrice"`
	MaturityDate int64  `json:"maturityDate"`
	ExpiryDate   int64  `json:"expiryDate"`
	IsOpen       bool   `json:"isOpen"`
	PoolSize     int64  `json:"poolSize"`
	LongAddress  []byte `json:"longAddress"`
	ShortAddress []byte `json:"shortAddress"`
	Result       int    `json:"result"`
	CustomMarket bool   `json:"customMarket"`
	CustomOracle []byte `json:"customOracle"`
	FinalPrice   int64  `json:"finalPrice"`
}

// GetId returns MarketsMarketsMarket.Id, and is useful for accessing the field via an interface.
func (v *MarketsMarketsMarket) GetId() string { return v.Id }

// GetTimestamp returns MarketsMarketsMarket.Timestamp, and is useful for accessing the field via an interface.
func (v *MarketsMarketsMarket) GetTimestamp() int64 { return v.Timestamp }

// GetCreator returns MarketsMarketsMarket.Creator, and is useful for accessing the field via an interface.
func (v *MarketsMarketsMarket) GetCreator() []byte { return v.Creator }

// GetCurrencyKey returns MarketsMarketsMarket.CurrencyKey, and is useful for accessing the field via an interface.
func (v *MarketsMarketsMarket) GetCurrencyKey() []byte { return v.CurrencyKey }

// GetStrikePrice returns MarketsMarketsMarket.StrikePrice, and is useful for accessing the field via an interface.
func (v *MarketsMarketsMarket) GetStrikePrice() int64 { return v.StrikePrice }

// GetMaturityDate returns MarketsMarketsMarket.MaturityDate, and is useful for accessing the field via an interface.
func (v *MarketsMarketsMarket) GetMaturityDate() int64 { return v.MaturityDate }

// GetExpiryDate returns MarketsMarketsMarket.ExpiryDate, and is useful for accessing the field via an interface.
func (v *MarketsMarketsMarket) GetExpiryDate() int64 { return v.ExpiryDate }

// GetIsOpen returns MarketsMarketsMarket.IsOpen, and is useful for accessing the field via an interface.
func (v *MarketsMarketsMarket) GetIsOpen() bool { return v.IsOpen }

// GetPoolSize returns MarketsMarketsMarket.PoolSize, and is useful for accessing the field via an interface.
func (v *MarketsMarketsMarket) GetPoolSize() int64 { return v.PoolSize }

// GetLongAddress returns MarketsMarketsMarket.LongAddress, and is useful for accessing the field via an interface.
func (v *MarketsMarketsMarket) GetLongAddress() []byte { return v.LongAddress }

// GetShortAddress returns MarketsMarketsMarket.ShortAddress, and is useful for accessing the field via an interface.
func (v *MarketsMarketsMarket) GetShortAddress() []byte { return v.ShortAddress }

// GetResult returns MarketsMarketsMarket.Result, and is useful for accessing the field via an interface.
func (v *MarketsMarketsMarket) GetResult() int { return v.Result }

// GetCustomMarket returns MarketsMarketsMarket.CustomMarket, and is useful for accessing the field via an interface.
func (v *MarketsMarketsMarket) GetCustomMarket() bool { return v.CustomMarket }

// GetCustomOracle returns MarketsMarketsMarket.CustomOracle, and is useful for accessing the field via an interface.
func (v *MarketsMarketsMarket) GetCustomOracle() []byte { return v.CustomOracle }

// GetFinalPrice returns MarketsMarketsMarket.FinalPrice, and is useful for accessing the field via an interface.
func (v *MarketsMarketsMarket) GetFinalPrice() int64 { return v.FinalPrice }

// MarketsResponse is returned by Markets on success.
type MarketsResponse struct {
	Markets []MarketsMarketsMarket `json:"markets"`
}

// GetMarkets returns MarketsResponse.Markets, and is useful for accessing the field via an interface.
func (v *MarketsResponse) GetMarkets() []MarketsMarketsMarket { return v.Markets }

// RangedMarketRangedMarket includes the requested fields of the GraphQL type RangedMarket.
type RangedMarketRangedMarket struct {
	Timestamp    int64                               `json:"timestamp"`
	CurrencyKey  []byte                              `json:"currencyKey"`
	MaturityDate int64                               `json:"maturityDate"`
	LeftPrice    int64                               `json:"leftPrice"`
	RightPrice   int64                               `json:"rightPrice"`
	InAddress    []byte                              `json:"inAddress"`
	OutAddress   []byte                              `json:"outAddress"`
	RightMarket  RangedMarketRangedMarketRightMarket `json:"rightMarket"`
	LeftMarket   RangedMarketRangedMarketLeftMarket  `json:"leftMarket"`
	IsOpen       bool                                `json:"isOpen"`
	Result       int                                 `json:"result"`
	FinalPrice   int64                               `json:"finalPrice"`
}

// GetTimestamp returns RangedMarketRangedMarket.Timestamp, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarket) GetTimestamp() int64 { return v.Timestamp }

// GetCurrencyKey returns RangedMarketRangedMarket.CurrencyKey, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarket) GetCurrencyKey() []byte { return v.CurrencyKey }

// GetMaturityDate returns RangedMarketRangedMarket.MaturityDate, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarket) GetMaturityDate() int64 { return v.MaturityDate }

// GetLeftPrice returns RangedMarketRangedMarket.LeftPrice, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarket) GetLeftPrice() int64 { return v.LeftPrice }

// GetRightPrice returns RangedMarketRangedMarket.RightPrice, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarket) GetRightPrice() int64 { return v.RightPrice }

// GetInAddress returns RangedMarketRangedMarket.InAddress, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarket) GetInAddress() []byte { return v.InAddress }

// GetOutAddress returns RangedMarketRangedMarket.OutAddress, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarket) GetOutAddress() []byte { return v.OutAddress }

// GetRightMarket returns RangedMarketRangedMarket.RightMarket, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarket) GetRightMarket() RangedMarketRangedMarketRightMarket {
	return v.RightMarket
}

// GetLeftMarket returns RangedMarketRangedMarket.LeftMarket, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarket) GetLeftMarket() RangedMarketRangedMarketLeftMarket {
	return v.LeftMarket
}

// GetIsOpen returns RangedMarketRangedMarket.IsOpen, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarket) GetIsOpen() bool { return v.IsOpen }

// GetResult returns RangedMarketRangedMarket.Result, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarket) GetResult() int { return v.Result }

// GetFinalPrice returns RangedMarketRangedMarket.FinalPrice, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarket) GetFinalPrice() int64 { return v.FinalPrice }

// RangedMarketRangedMarketLeftMarket includes the requested fields of the GraphQL type Market.
type RangedMarketRangedMarketLeftMarket struct {
	Id           string `json:"id"`
	Timestamp    int64  `json:"timestamp"`
	Creator      []byte `json:"creator"`
	CurrencyKey  []byte `json:"currencyKey"`
	StrikePrice  int64  `json:"strikePrice"`
	MaturityDate int64  `json:"maturityDate"`
	ExpiryDate   int64  `json:"expiryDate"`
	IsOpen       bool   `json:"isOpen"`
	PoolSize     int64  `json:"poolSize"`
	LongAddress  []byte `json:"longAddress"`
	ShortAddress []byte `json:"shortAddress"`
	Result       int    `json:"result"`
	CustomMarket bool   `json:"customMarket"`
	CustomOracle []byte `json:"customOracle"`
	FinalPrice   int64  `json:"finalPrice"`
}

// GetId returns RangedMarketRangedMarketLeftMarket.Id, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketLeftMarket) GetId() string { return v.Id }

// GetTimestamp returns RangedMarketRangedMarketLeftMarket.Timestamp, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketLeftMarket) GetTimestamp() int64 { return v.Timestamp }

// GetCreator returns RangedMarketRangedMarketLeftMarket.Creator, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketLeftMarket) GetCreator() []byte { return v.Creator }

// GetCurrencyKey returns RangedMarketRangedMarketLeftMarket.CurrencyKey, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketLeftMarket) GetCurrencyKey() []byte { return v.CurrencyKey }

// GetStrikePrice returns RangedMarketRangedMarketLeftMarket.StrikePrice, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketLeftMarket) GetStrikePrice() int64 { return v.StrikePrice }

// GetMaturityDate returns RangedMarketRangedMarketLeftMarket.MaturityDate, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketLeftMarket) GetMaturityDate() int64 { return v.MaturityDate }

// GetExpiryDate returns RangedMarketRangedMarketLeftMarket.ExpiryDate, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketLeftMarket) GetExpiryDate() int64 { return v.ExpiryDate }

// GetIsOpen returns RangedMarketRangedMarketLeftMarket.IsOpen, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketLeftMarket) GetIsOpen() bool { return v.IsOpen }

// GetPoolSize returns RangedMarketRangedMarketLeftMarket.PoolSize, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketLeftMarket) GetPoolSize() int64 { return v.PoolSize }

// GetLongAddress returns RangedMarketRangedMarketLeftMarket.LongAddress, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketLeftMarket) GetLongAddress() []byte { return v.LongAddress }

// GetShortAddress returns RangedMarketRangedMarketLeftMarket.ShortAddress, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketLeftMarket) GetShortAddress() []byte { return v.ShortAddress }

// GetResult returns RangedMarketRangedMarketLeftMarket.Result, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketLeftMarket) GetResult() int { return v.Result }

// GetCustomMarket returns RangedMarketRangedMarketLeftMarket.CustomMarket, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketLeftMarket) GetCustomMarket() bool { return v.CustomMarket }

// GetCustomOracle returns RangedMarketRangedMarketLeftMarket.CustomOracle, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketLeftMarket) GetCustomOracle() []byte { return v.CustomOracle }

// GetFinalPrice returns RangedMarketRangedMarketLeftMarket.FinalPrice, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketLeftMarket) GetFinalPrice() int64 { return v.FinalPrice }

// RangedMarketRangedMarketRightMarket includes the requested fields of the GraphQL type Market.
type RangedMarketRangedMarketRightMarket struct {
	Id           string `json:"id"`
	Timestamp    int64  `json:"timestamp"`
	Creator      []byte `json:"creator"`
	CurrencyKey  []byte `json:"currencyKey"`
	StrikePrice  int64  `json:"strikePrice"`
	MaturityDate int64  `json:"maturityDate"`
	ExpiryDate   int64  `json:"expiryDate"`
	IsOpen       bool   `json:"isOpen"`
	PoolSize     int64  `json:"poolSize"`
	LongAddress  []byte `json:"longAddress"`
	ShortAddress []byte `json:"shortAddress"`
	Result       int    `json:"result"`
	CustomMarket bool   `json:"customMarket"`
	CustomOracle []byte `json:"customOracle"`
	FinalPrice   int64  `json:"finalPrice"`
}

// GetId returns RangedMarketRangedMarketRightMarket.Id, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketRightMarket) GetId() string { return v.Id }

// GetTimestamp returns RangedMarketRangedMarketRightMarket.Timestamp, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketRightMarket) GetTimestamp() int64 { return v.Timestamp }

// GetCreator returns RangedMarketRangedMarketRightMarket.Creator, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketRightMarket) GetCreator() []byte { return v.Creator }

// GetCurrencyKey returns RangedMarketRangedMarketRightMarket.CurrencyKey, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketRightMarket) GetCurrencyKey() []byte { return v.CurrencyKey }

// GetStrikePrice returns RangedMarketRangedMarketRightMarket.StrikePrice, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketRightMarket) GetStrikePrice() int64 { return v.StrikePrice }

// GetMaturityDate returns RangedMarketRangedMarketRightMarket.MaturityDate, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketRightMarket) GetMaturityDate() int64 { return v.MaturityDate }

// GetExpiryDate returns RangedMarketRangedMarketRightMarket.ExpiryDate, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketRightMarket) GetExpiryDate() int64 { return v.ExpiryDate }

// GetIsOpen returns RangedMarketRangedMarketRightMarket.IsOpen, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketRightMarket) GetIsOpen() bool { return v.IsOpen }

// GetPoolSize returns RangedMarketRangedMarketRightMarket.PoolSize, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketRightMarket) GetPoolSize() int64 { return v.PoolSize }

// GetLongAddress returns RangedMarketRangedMarketRightMarket.LongAddress, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketRightMarket) GetLongAddress() []byte { return v.LongAddress }

// GetShortAddress returns RangedMarketRangedMarketRightMarket.ShortAddress, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketRightMarket) GetShortAddress() []byte { return v.ShortAddress }

// GetResult returns RangedMarketRangedMarketRightMarket.Result, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketRightMarket) GetResult() int { return v.Result }

// GetCustomMarket returns RangedMarketRangedMarketRightMarket.CustomMarket, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketRightMarket) GetCustomMarket() bool { return v.CustomMarket }

// GetCustomOracle returns RangedMarketRangedMarketRightMarket.CustomOracle, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketRightMarket) GetCustomOracle() []byte { return v.CustomOracle }

// GetFinalPrice returns RangedMarketRangedMarketRightMarket.FinalPrice, and is useful for accessing the field via an interface.
func (v *RangedMarketRangedMarketRightMarket) GetFinalPrice() int64 { return v.FinalPrice }

// RangedMarketResponse is returned by RangedMarket on success.
type RangedMarketResponse struct {
	RangedMarket RangedMarketRangedMarket `json:"rangedMarket"`
}

// GetRangedMarket returns RangedMarketResponse.RangedMarket, and is useful for accessing the field via an interface.
func (v *RangedMarketResponse) GetRangedMarket() RangedMarketRangedMarket { return v.RangedMarket }

// RangedMarketsRangedMarketsRangedMarket includes the requested fields of the GraphQL type RangedMarket.
type RangedMarketsRangedMarketsRangedMarket struct {
	Id           string                                            `json:"id"`
	Timestamp    int64                                             `json:"timestamp"`
	CurrencyKey  []byte                                            `json:"currencyKey"`
	MaturityDate int64                                             `json:"maturityDate"`
	LeftPrice    int64                                             `json:"leftPrice"`
	RightPrice   int64                                             `json:"rightPrice"`
	InAddress    []byte                                            `json:"inAddress"`
	OutAddress   []byte                                            `json:"outAddress"`
	RightMarket  RangedMarketsRangedMarketsRangedMarketRightMarket `json:"rightMarket"`
	LeftMarket   RangedMarketsRangedMarketsRangedMarketLeftMarket  `json:"leftMarket"`
	IsOpen       bool                                              `json:"isOpen"`
	Result       int                                               `json:"result"`
	FinalPrice   int64                                             `json:"finalPrice"`
}

// GetId returns RangedMarketsRangedMarketsRangedMarket.Id, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarket) GetId() string { return v.Id }

// GetTimestamp returns RangedMarketsRangedMarketsRangedMarket.Timestamp, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarket) GetTimestamp() int64 { return v.Timestamp }

// GetCurrencyKey returns RangedMarketsRangedMarketsRangedMarket.CurrencyKey, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarket) GetCurrencyKey() []byte { return v.CurrencyKey }

// GetMaturityDate returns RangedMarketsRangedMarketsRangedMarket.MaturityDate, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarket) GetMaturityDate() int64 { return v.MaturityDate }

// GetLeftPrice returns RangedMarketsRangedMarketsRangedMarket.LeftPrice, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarket) GetLeftPrice() int64 { return v.LeftPrice }

// GetRightPrice returns RangedMarketsRangedMarketsRangedMarket.RightPrice, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarket) GetRightPrice() int64 { return v.RightPrice }

// GetInAddress returns RangedMarketsRangedMarketsRangedMarket.InAddress, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarket) GetInAddress() []byte { return v.InAddress }

// GetOutAddress returns RangedMarketsRangedMarketsRangedMarket.OutAddress, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarket) GetOutAddress() []byte { return v.OutAddress }

// GetRightMarket returns RangedMarketsRangedMarketsRangedMarket.RightMarket, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarket) GetRightMarket() RangedMarketsRangedMarketsRangedMarketRightMarket {
	return v.RightMarket
}

// GetLeftMarket returns RangedMarketsRangedMarketsRangedMarket.LeftMarket, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarket) GetLeftMarket() RangedMarketsRangedMarketsRangedMarketLeftMarket {
	return v.LeftMarket
}

// GetIsOpen returns RangedMarketsRangedMarketsRangedMarket.IsOpen, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarket) GetIsOpen() bool { return v.IsOpen }

// GetResult returns RangedMarketsRangedMarketsRangedMarket.Result, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarket) GetResult() int { return v.Result }

// GetFinalPrice returns RangedMarketsRangedMarketsRangedMarket.FinalPrice, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarket) GetFinalPrice() int64 { return v.FinalPrice }

// RangedMarketsRangedMarketsRangedMarketLeftMarket includes the requested fields of the GraphQL type Market.
type RangedMarketsRangedMarketsRangedMarketLeftMarket struct {
	Id           string `json:"id"`
	Timestamp    int64  `json:"timestamp"`
	Creator      []byte `json:"creator"`
	CurrencyKey  []byte `json:"currencyKey"`
	StrikePrice  int64  `json:"strikePrice"`
	MaturityDate int64  `json:"maturityDate"`
	ExpiryDate   int64  `json:"expiryDate"`
	IsOpen       bool   `json:"isOpen"`
	PoolSize     int64  `json:"poolSize"`
	LongAddress  []byte `json:"longAddress"`
	ShortAddress []byte `json:"shortAddress"`
	Result       int    `json:"result"`
	CustomMarket bool   `json:"customMarket"`
	CustomOracle []byte `json:"customOracle"`
	FinalPrice   int64  `json:"finalPrice"`
}

// GetId returns RangedMarketsRangedMarketsRangedMarketLeftMarket.Id, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketLeftMarket) GetId() string { return v.Id }

// GetTimestamp returns RangedMarketsRangedMarketsRangedMarketLeftMarket.Timestamp, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketLeftMarket) GetTimestamp() int64 { return v.Timestamp }

// GetCreator returns RangedMarketsRangedMarketsRangedMarketLeftMarket.Creator, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketLeftMarket) GetCreator() []byte { return v.Creator }

// GetCurrencyKey returns RangedMarketsRangedMarketsRangedMarketLeftMarket.CurrencyKey, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketLeftMarket) GetCurrencyKey() []byte {
	return v.CurrencyKey
}

// GetStrikePrice returns RangedMarketsRangedMarketsRangedMarketLeftMarket.StrikePrice, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketLeftMarket) GetStrikePrice() int64 {
	return v.StrikePrice
}

// GetMaturityDate returns RangedMarketsRangedMarketsRangedMarketLeftMarket.MaturityDate, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketLeftMarket) GetMaturityDate() int64 {
	return v.MaturityDate
}

// GetExpiryDate returns RangedMarketsRangedMarketsRangedMarketLeftMarket.ExpiryDate, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketLeftMarket) GetExpiryDate() int64 { return v.ExpiryDate }

// GetIsOpen returns RangedMarketsRangedMarketsRangedMarketLeftMarket.IsOpen, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketLeftMarket) GetIsOpen() bool { return v.IsOpen }

// GetPoolSize returns RangedMarketsRangedMarketsRangedMarketLeftMarket.PoolSize, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketLeftMarket) GetPoolSize() int64 { return v.PoolSize }

// GetLongAddress returns RangedMarketsRangedMarketsRangedMarketLeftMarket.LongAddress, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketLeftMarket) GetLongAddress() []byte {
	return v.LongAddress
}

// GetShortAddress returns RangedMarketsRangedMarketsRangedMarketLeftMarket.ShortAddress, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketLeftMarket) GetShortAddress() []byte {
	return v.ShortAddress
}

// GetResult returns RangedMarketsRangedMarketsRangedMarketLeftMarket.Result, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketLeftMarket) GetResult() int { return v.Result }

// GetCustomMarket returns RangedMarketsRangedMarketsRangedMarketLeftMarket.CustomMarket, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketLeftMarket) GetCustomMarket() bool {
	return v.CustomMarket
}

// GetCustomOracle returns RangedMarketsRangedMarketsRangedMarketLeftMarket.CustomOracle, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketLeftMarket) GetCustomOracle() []byte {
	return v.CustomOracle
}

// GetFinalPrice returns RangedMarketsRangedMarketsRangedMarketLeftMarket.FinalPrice, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketLeftMarket) GetFinalPrice() int64 { return v.FinalPrice }

// RangedMarketsRangedMarketsRangedMarketRightMarket includes the requested fields of the GraphQL type Market.
type RangedMarketsRangedMarketsRangedMarketRightMarket struct {
	Id           string `json:"id"`
	Timestamp    int64  `json:"timestamp"`
	Creator      []byte `json:"creator"`
	CurrencyKey  []byte `json:"currencyKey"`
	StrikePrice  int64  `json:"strikePrice"`
	MaturityDate int64  `json:"maturityDate"`
	ExpiryDate   int64  `json:"expiryDate"`
	IsOpen       bool   `json:"isOpen"`
	PoolSize     int64  `json:"poolSize"`
	LongAddress  []byte `json:"longAddress"`
	ShortAddress []byte `json:"shortAddress"`
	Result       int    `json:"result"`
	CustomMarket bool   `json:"customMarket"`
	CustomOracle []byte `json:"customOracle"`
	FinalPrice   int64  `json:"finalPrice"`
}

// GetId returns RangedMarketsRangedMarketsRangedMarketRightMarket.Id, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketRightMarket) GetId() string { return v.Id }

// GetTimestamp returns RangedMarketsRangedMarketsRangedMarketRightMarket.Timestamp, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketRightMarket) GetTimestamp() int64 { return v.Timestamp }

// GetCreator returns RangedMarketsRangedMarketsRangedMarketRightMarket.Creator, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketRightMarket) GetCreator() []byte { return v.Creator }

// GetCurrencyKey returns RangedMarketsRangedMarketsRangedMarketRightMarket.CurrencyKey, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketRightMarket) GetCurrencyKey() []byte {
	return v.CurrencyKey
}

// GetStrikePrice returns RangedMarketsRangedMarketsRangedMarketRightMarket.StrikePrice, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketRightMarket) GetStrikePrice() int64 {
	return v.StrikePrice
}

// GetMaturityDate returns RangedMarketsRangedMarketsRangedMarketRightMarket.MaturityDate, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketRightMarket) GetMaturityDate() int64 {
	return v.MaturityDate
}

// GetExpiryDate returns RangedMarketsRangedMarketsRangedMarketRightMarket.ExpiryDate, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketRightMarket) GetExpiryDate() int64 {
	return v.ExpiryDate
}

// GetIsOpen returns RangedMarketsRangedMarketsRangedMarketRightMarket.IsOpen, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketRightMarket) GetIsOpen() bool { return v.IsOpen }

// GetPoolSize returns RangedMarketsRangedMarketsRangedMarketRightMarket.PoolSize, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketRightMarket) GetPoolSize() int64 { return v.PoolSize }

// GetLongAddress returns RangedMarketsRangedMarketsRangedMarketRightMarket.LongAddress, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketRightMarket) GetLongAddress() []byte {
	return v.LongAddress
}

// GetShortAddress returns RangedMarketsRangedMarketsRangedMarketRightMarket.ShortAddress, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketRightMarket) GetShortAddress() []byte {
	return v.ShortAddress
}

// GetResult returns RangedMarketsRangedMarketsRangedMarketRightMarket.Result, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketRightMarket) GetResult() int { return v.Result }

// GetCustomMarket returns RangedMarketsRangedMarketsRangedMarketRightMarket.CustomMarket, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketRightMarket) GetCustomMarket() bool {
	return v.CustomMarket
}

// GetCustomOracle returns RangedMarketsRangedMarketsRangedMarketRightMarket.CustomOracle, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketRightMarket) GetCustomOracle() []byte {
	return v.CustomOracle
}

// GetFinalPrice returns RangedMarketsRangedMarketsRangedMarketRightMarket.FinalPrice, and is useful for accessing the field via an interface.
func (v *RangedMarketsRangedMarketsRangedMarketRightMarket) GetFinalPrice() int64 {
	return v.FinalPrice
}

// RangedMarketsResponse is returned by RangedMarkets on success.
type RangedMarketsResponse struct {
	RangedMarkets []RangedMarketsRangedMarketsRangedMarket `json:"rangedMarkets"`
}

// GetRangedMarkets returns RangedMarketsResponse.RangedMarkets, and is useful for accessing the field via an interface.
func (v *RangedMarketsResponse) GetRangedMarkets() []RangedMarketsRangedMarketsRangedMarket {
	return v.RangedMarkets
}

// __AllMarketsInput is used internally by genqlient
type __AllMarketsInput struct {
	Skip  int `json:"skip"`
	First int `json:"first"`
}

// GetSkip returns __AllMarketsInput.Skip, and is useful for accessing the field via an interface.
func (v *__AllMarketsInput) GetSkip() int { return v.Skip }

// GetFirst returns __AllMarketsInput.First, and is useful for accessing the field via an interface.
func (v *__AllMarketsInput) GetFirst() int { return v.First }

// __AllRangedMarketsInput is used internally by genqlient
type __AllRangedMarketsInput struct {
	Skip  int `json:"skip"`
	First int `json:"first"`
}

// GetSkip returns __AllRangedMarketsInput.Skip, and is useful for accessing the field via an interface.
func (v *__AllRangedMarketsInput) GetSkip() int { return v.Skip }

// GetFirst returns __AllRangedMarketsInput.First, and is useful for accessing the field via an interface.
func (v *__AllRangedMarketsInput) GetFirst() int { return v.First }

// __MarketInput is used internally by genqlient
type __MarketInput struct {
	Id string `json:"id"`
}

// GetId returns __MarketInput.Id, and is useful for accessing the field via an interface.
func (v *__MarketInput) GetId() string { return v.Id }

// __MarketsInput is used internally by genqlient
type __MarketsInput struct {
	Skip  int   `json:"skip"`
	First int   `json:"first"`
	T     int64 `json:"t"`
}

// GetSkip returns __MarketsInput.Skip, and is useful for accessing the field via an interface.
func (v *__MarketsInput) GetSkip() int { return v.Skip }

// GetFirst returns __MarketsInput.First, and is useful for accessing the field via an interface.
func (v *__MarketsInput) GetFirst() int { return v.First }

// GetT returns __MarketsInput.T, and is useful for accessing the field via an interface.
func (v *__MarketsInput) GetT() int64 { return v.T }

// __RangedMarketInput is used internally by genqlient
type __RangedMarketInput struct {
	Id string `json:"id"`
}

// GetId returns __RangedMarketInput.Id, and is useful for accessing the field via an interface.
func (v *__RangedMarketInput) GetId() string { return v.Id }

// __RangedMarketsInput is used internally by genqlient
type __RangedMarketsInput struct {
	Skip  int   `json:"skip"`
	First int   `json:"first"`
	T     int64 `json:"t"`
}

// GetSkip returns __RangedMarketsInput.Skip, and is useful for accessing the field via an interface.
func (v *__RangedMarketsInput) GetSkip() int { return v.Skip }

// GetFirst returns __RangedMarketsInput.First, and is useful for accessing the field via an interface.
func (v *__RangedMarketsInput) GetFirst() int { return v.First }

// GetT returns __RangedMarketsInput.T, and is useful for accessing the field via an interface.
func (v *__RangedMarketsInput) GetT() int64 { return v.T }

func AllMarkets(
	ctx context.Context,
	client graphql.Client,
	skip int,
	first int,
) (*AllMarketsResponse, error) {
	req := &graphql.Request{
		OpName: "AllMarkets",
		Query: `
query AllMarkets ($skip: Int, $first: Int) {
	markets(skip: $skip, first: $first, orderBy: timestamp, orderDirection: desc) {
		id
		timestamp
		creator
		currencyKey
		strikePrice
		maturityDate
		expiryDate
		isOpen
		poolSize
		longAddress
		shortAddress
		result
		customMarket
		customOracle
		finalPrice
	}
}
`,
		Variables: &__AllMarketsInput{
			Skip:  skip,
			First: first,
		},
	}
	var err error

	var data AllMarketsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func AllRangedMarkets(
	ctx context.Context,
	client graphql.Client,
	skip int,
	first int,
) (*AllRangedMarketsResponse, error) {
	req := &graphql.Request{
		OpName: "AllRangedMarkets",
		Query: `
query AllRangedMarkets ($skip: Int, $first: Int) {
	rangedMarkets(skip: $skip, first: $first, orderBy: timestamp, orderDirection: desc) {
		id
		timestamp
		currencyKey
		maturityDate
		leftPrice
		rightPrice
		inAddress
		outAddress
		rightMarket {
			id
			timestamp
			creator
			currencyKey
			strikePrice
			maturityDate
			expiryDate
			isOpen
			poolSize
			longAddress
			shortAddress
			result
			customMarket
			customOracle
			finalPrice
		}
		leftMarket {
			id
			timestamp
			creator
			currencyKey
			strikePrice
			maturityDate
			expiryDate
			isOpen
			poolSize
			longAddress
			shortAddress
			result
			customMarket
			customOracle
			finalPrice
		}
		isOpen
		result
		finalPrice
	}
}
`,
		Variables: &__AllRangedMarketsInput{
			Skip:  skip,
			First: first,
		},
	}
	var err error

	var data AllRangedMarketsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func Market(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*MarketResponse, error) {
	req := &graphql.Request{
		OpName: "Market",
		Query: `
query Market ($id: ID!) {
	market(id: $id) {
		timestamp
		creator
		currencyKey
		strikePrice
		maturityDate
		expiryDate
		isOpen
		poolSize
		longAddress
		shortAddress
		result
		customMarket
		customOracle
		finalPrice
	}
}
`,
		Variables: &__MarketInput{
			Id: id,
		},
	}
	var err error

	var data MarketResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func Markets(
	ctx context.Context,
	client graphql.Client,
	skip int,
	first int,
	t int64,
) (*MarketsResponse, error) {
	req := &graphql.Request{
		OpName: "Markets",
		Query: `
query Markets ($skip: Int, $first: Int, $t: BigInt) {
	markets(skip: $skip, first: $first, orderBy: timestamp, orderDirection: desc, where: {timestamp_gt:$t}) {
		id
		timestamp
		creator
		currencyKey
		strikePrice
		maturityDate
		expiryDate
		isOpen
		poolSize
		longAddress
		shortAddress
		result
		customMarket
		customOracle
		finalPrice
	}
}
`,
		Variables: &__MarketsInput{
			Skip:  skip,
			First: first,
			T:     t,
		},
	}
	var err error

	var data MarketsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func RangedMarket(
	ctx context.Context,
	client graphql.Client,
	id string,
) (*RangedMarketResponse, error) {
	req := &graphql.Request{
		OpName: "RangedMarket",
		Query: `
query RangedMarket ($id: ID!) {
	rangedMarket(id: $id) {
		timestamp
		currencyKey
		maturityDate
		leftPrice
		rightPrice
		inAddress
		outAddress
		rightMarket {
			id
			timestamp
			creator
			currencyKey
			strikePrice
			maturityDate
			expiryDate
			isOpen
			poolSize
			longAddress
			shortAddress
			result
			customMarket
			customOracle
			finalPrice
		}
		leftMarket {
			id
			timestamp
			creator
			currencyKey
			strikePrice
			maturityDate
			expiryDate
			isOpen
			poolSize
			longAddress
			shortAddress
			result
			customMarket
			customOracle
			finalPrice
		}
		isOpen
		result
		finalPrice
	}
}
`,
		Variables: &__RangedMarketInput{
			Id: id,
		},
	}
	var err error

	var data RangedMarketResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

func RangedMarkets(
	ctx context.Context,
	client graphql.Client,
	skip int,
	first int,
	t int64,
) (*RangedMarketsResponse, error) {
	req := &graphql.Request{
		OpName: "RangedMarkets",
		Query: `
query RangedMarkets ($skip: Int, $first: Int, $t: BigInt) {
	rangedMarkets(skip: $skip, first: $first, orderBy: timestamp, orderDirection: desc, where: {timestamp_gt:$t}) {
		id
		timestamp
		currencyKey
		maturityDate
		leftPrice
		rightPrice
		inAddress
		outAddress
		rightMarket {
			id
			timestamp
			creator
			currencyKey
			strikePrice
			maturityDate
			expiryDate
			isOpen
			poolSize
			longAddress
			shortAddress
			result
			customMarket
			customOracle
			finalPrice
		}
		leftMarket {
			id
			timestamp
			creator
			currencyKey
			strikePrice
			maturityDate
			expiryDate
			isOpen
			poolSize
			longAddress
			shortAddress
			result
			customMarket
			customOracle
			finalPrice
		}
		isOpen
		result
		finalPrice
	}
}
`,
		Variables: &__RangedMarketsInput{
			Skip:  skip,
			First: first,
			T:     t,
		},
	}
	var err error

	var data RangedMarketsResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
