// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package opyn

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// OptionsOtokensOToken includes the requested fields of the GraphQL type OToken.
type OptionsOtokensOToken struct {
	Id              string                                   `json:"id"`
	Symbol          string                                   `json:"symbol"`
	Name            string                                   `json:"name"`
	Decimals        int                                      `json:"decimals"`
	StrikeAsset     OptionsOtokensOTokenStrikeAssetERC20     `json:"strikeAsset"`
	UnderlyingAsset OptionsOtokensOTokenUnderlyingAssetERC20 `json:"underlyingAsset"`
	CollateralAsset OptionsOtokensOTokenCollateralAssetERC20 `json:"collateralAsset"`
	StrikePrice     int                                      `json:"strikePrice"`
	IsPut           bool                                     `json:"isPut"`
	ExpiryTimestamp int                                      `json:"expiryTimestamp"`
}

// GetId returns OptionsOtokensOToken.Id, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOToken) GetId() string { return v.Id }

// GetSymbol returns OptionsOtokensOToken.Symbol, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOToken) GetSymbol() string { return v.Symbol }

// GetName returns OptionsOtokensOToken.Name, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOToken) GetName() string { return v.Name }

// GetDecimals returns OptionsOtokensOToken.Decimals, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOToken) GetDecimals() int { return v.Decimals }

// GetStrikeAsset returns OptionsOtokensOToken.StrikeAsset, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOToken) GetStrikeAsset() OptionsOtokensOTokenStrikeAssetERC20 {
	return v.StrikeAsset
}

// GetUnderlyingAsset returns OptionsOtokensOToken.UnderlyingAsset, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOToken) GetUnderlyingAsset() OptionsOtokensOTokenUnderlyingAssetERC20 {
	return v.UnderlyingAsset
}

// GetCollateralAsset returns OptionsOtokensOToken.CollateralAsset, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOToken) GetCollateralAsset() OptionsOtokensOTokenCollateralAssetERC20 {
	return v.CollateralAsset
}

// GetStrikePrice returns OptionsOtokensOToken.StrikePrice, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOToken) GetStrikePrice() int { return v.StrikePrice }

// GetIsPut returns OptionsOtokensOToken.IsPut, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOToken) GetIsPut() bool { return v.IsPut }

// GetExpiryTimestamp returns OptionsOtokensOToken.ExpiryTimestamp, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOToken) GetExpiryTimestamp() int { return v.ExpiryTimestamp }

// OptionsOtokensOTokenCollateralAssetERC20 includes the requested fields of the GraphQL type ERC20.
type OptionsOtokensOTokenCollateralAssetERC20 struct {
	Id       string `json:"id"`
	Symbol   string `json:"symbol"`
	Decimals int    `json:"decimals"`
}

// GetId returns OptionsOtokensOTokenCollateralAssetERC20.Id, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOTokenCollateralAssetERC20) GetId() string { return v.Id }

// GetSymbol returns OptionsOtokensOTokenCollateralAssetERC20.Symbol, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOTokenCollateralAssetERC20) GetSymbol() string { return v.Symbol }

// GetDecimals returns OptionsOtokensOTokenCollateralAssetERC20.Decimals, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOTokenCollateralAssetERC20) GetDecimals() int { return v.Decimals }

// OptionsOtokensOTokenStrikeAssetERC20 includes the requested fields of the GraphQL type ERC20.
type OptionsOtokensOTokenStrikeAssetERC20 struct {
	Id       string `json:"id"`
	Symbol   string `json:"symbol"`
	Decimals int    `json:"decimals"`
}

// GetId returns OptionsOtokensOTokenStrikeAssetERC20.Id, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOTokenStrikeAssetERC20) GetId() string { return v.Id }

// GetSymbol returns OptionsOtokensOTokenStrikeAssetERC20.Symbol, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOTokenStrikeAssetERC20) GetSymbol() string { return v.Symbol }

// GetDecimals returns OptionsOtokensOTokenStrikeAssetERC20.Decimals, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOTokenStrikeAssetERC20) GetDecimals() int { return v.Decimals }

// OptionsOtokensOTokenUnderlyingAssetERC20 includes the requested fields of the GraphQL type ERC20.
type OptionsOtokensOTokenUnderlyingAssetERC20 struct {
	Id       string `json:"id"`
	Symbol   string `json:"symbol"`
	Decimals int    `json:"decimals"`
}

// GetId returns OptionsOtokensOTokenUnderlyingAssetERC20.Id, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOTokenUnderlyingAssetERC20) GetId() string { return v.Id }

// GetSymbol returns OptionsOtokensOTokenUnderlyingAssetERC20.Symbol, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOTokenUnderlyingAssetERC20) GetSymbol() string { return v.Symbol }

// GetDecimals returns OptionsOtokensOTokenUnderlyingAssetERC20.Decimals, and is useful for accessing the field via an interface.
func (v *OptionsOtokensOTokenUnderlyingAssetERC20) GetDecimals() int { return v.Decimals }

// OptionsResponse is returned by Options on success.
type OptionsResponse struct {
	Otokens []OptionsOtokensOToken `json:"otokens"`
}

// GetOtokens returns OptionsResponse.Otokens, and is useful for accessing the field via an interface.
func (v *OptionsResponse) GetOtokens() []OptionsOtokensOToken { return v.Otokens }

func Options(
	ctx context.Context,
	client graphql.Client,
) (*OptionsResponse, error) {
	var err error

	var retval OptionsResponse
	err = client.MakeRequest(
		ctx,
		"Options",
		`
query Options {
	otokens {
		id
		symbol
		name
		decimals
		strikeAsset {
			id
			symbol
			decimals
		}
		underlyingAsset {
			id
			symbol
			decimals
		}
		collateralAsset {
			id
			symbol
			decimals
		}
		strikePrice
		isPut
		expiryTimestamp
	}
}
`,
		&retval,
		nil,
	)
	return &retval, err
}
